import datetime
import random

import telebot
from telebot.types import Message, ReplyKeyboardRemove as RM, ReplyKeyboardMarkup as RKM, InlineKeyboardButton as IB, InlineKeyboardMarkup as IKM, CallbackQuery as Cq
import s_taper
from s_taper.consts import *
import time

temp = {}
powers = {'–≤–æ–∑–¥—É—ÖüçÉ': (100, 17), '–í–æ–¥–∞üåä': (90, 22), '–ó–µ–º–ª—è üåç': (150, 16)}
users = {
    'userid': INT + KEY,
    'username': TEXT,
    'power': TEXT,
    'hp': INT,
    'damage': INT,
    'levl': INT,
    'xp': INT
}
eats = {
    'userid': INT + KEY,
    'food': TEXT
}
heals = s_taper.Taper('eats', 'rpg_game.db').create_table(eats)
user = s_taper.Taper('users', 'rpg_game.db').create_table(users)
bot = telebot.TeleBot('YOUR_TELEGRAM_BOT_API_KEY')


class Enemy:
    enemies = {
        '–í—É—Ä–¥–∞–ª–∞–∫': (80, 20),
        '–ü—Ä–∏–∑—Ä–∞–∫': (85, 15),
        '–ú–∏–Ω–æ—Ç–∞–≤—Ä': (100, 15),
        '–ú–µ–¥—É–∑–∞': (75, 25),
        'Bop': (60, 20),
        '–§–µ–Ω–∏–∫—Å': (130, 30),
        '–î—Ä–∞–∫–æ–Ω': (150, 40),
        '–ü—å—è–Ω—ã–π –¥–µ–¥': (90, 25),
        '–≥–æ–ª–æ–¥–Ω–∞—è —Å–≤–∏–Ω—å—è': (400, 20)
    }

    def __init__(self, hero_lvl):
        self.name = random.choice(list(self.enemies))
        self.hp = self.enemies[self.name][0] + (5 * (hero_lvl - 1))  # –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —É—Ä–æ–≤–Ω—è –≥–µ—Ä–æ—è
        self.damage = self.enemies[self.name][1] + (5 * (hero_lvl - 1))  # –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —É—Ä–æ–≤–Ω—è –≥–µ—Ä–æ—è


def fight(msg: Message):
    bot.send_message(msg.chat.id, '–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –¥–µ—Ä–µ–≤–Ω–∏ –≤ –ø–æ–∏—Å–∫–∞—Ö –≤—Ä–∞–≥–æ–≤...')
    time.sleep(3)
    bot.send_message(msg.chat.id, 'K–∞–∂–µ—Ç—Å—è –≤—Ä–∞–≥–∏ —É–∂–µ –±–ª–∏–∑–∫–æ...')
    time.sleep(1)
    new_enemy(msg)


def new_enemy(msg: Message):
    player = user.read('userid', msg.chat.id)
    enemy = Enemy(player[5])
    kb = RKM(True, True)
    kb.row("–°—Ä–∞–∑–∏—Ç—å—Å—è", "–°–±–µ–∂–∞—Ç—å")
    kb.row("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–æ—Ä–æ–¥")
    txt = f'–¢—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª –≤—Ä–∞–≥–∞: {enemy.name}, xn: {enemy.hp}, —É—Ä–æ–Ω: {enemy.damage}. \n—á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?'
    bot.send_message(msg.chat.id, txt, reply_markup=kb)
    bot.register_next_step_handler(msg, fight_handler, enemy)


def fight_handler(msg: Message, enemy: Enemy):
    if msg.text == '–°—Ä–∞–∑–∏—Ç—å—Å—è':
        attack(msg, enemy)
    elif msg.text == '–°–±–µ–∂–∞—Ç—å':
        run = random.randint(1, 5)
        if run in range(2, 3):
            bot.send_message(msg.chat.id, '–í—ã —Å–±–µ–∂–∞–ª–∏')
            time.sleep(3)
            new_enemy(msg)
        else:
            bot.send_message(msg.chat.id, '–≤–∞–º –Ω–µ—É–¥–∞–ª–æ—Å—å —Å–±–µ–∂–∞—Ç—å, –≤–∞—Å –¥–æ–≥–Ω–∞–ª–∏')
            attack(msg, enemy)
    elif msg.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–æ—Ä–æ–¥':
        time.sleep(3)
        bot.send_message(msg.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–æ—Ä–æ–¥')
        time.sleep(3)
        menu(msg)


def attack(msg: Message, enemy: Enemy):
    att = player_attack(msg, enemy)
    if att:
        att = enemy_attack(msg, enemy)
        if att:
            attack(msg, enemy)
    else:
        player = user.read('userid', msg.chat.id)
        time.sleep(2)
        xp = random.randint(20, 30)
        bot.send_message(msg.chat.id, f'–ó–∞ –±–æ–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {xp} –æ–ø—ã—Ç–∞')
        player[6] += xp
        user.write(player)
        xp_check(msg)
        bot.send_message(msg.chat.id, '–≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å –¥–∞–ª—å—à–µ')
        new_enemy(msg)
        return


def player_attack(msg: Message, enemy: Enemy):
    time.sleep(2)
    player = user.read('userid', msg.chat.id)
    enemy.hp -= player[4]
    if enemy.hp <= 0:
        bot.send_message(msg.chat.id, '–≤—ã –ø–æ–±–µ–¥–∏–ª–∏')
        return False
    else:
        bot.send_message(msg.chat.id, f'{enemy.name}, hp {round(enemy.hp, 1)}')
        return True


def enemy_attack(msg: Message, enemy: Enemy):
    time.sleep(2)
    player = user.read('userid', msg.chat.id)
    player[3] -= enemy.damage
    user.write(player)
    if player[3] <= 0:
        player[3] = 1
        user.write(player)
        bot.send_message(msg.chat.id, '–≤—ã –ø–æ—á—Ç–∏ –ø–æ–≥–∏–±–ª–∏')
        time.sleep(2)
        menu(msg)
        return
    else:
        bot.send_message(msg.chat.id, f'{player[1]}, hp {round(player[3], 1)}')
        return True


def xp_check(m: Message):
    player = user.read('userid', m.chat.id)
    if player[6] >= 100 + ((player[5] - 1) * 50):
        player[6] -= 100 + ((player[5] - 1) * 50)
        player[3] = powers[player[2]][0] + ((player[5] - 1) * 15)
        player[5] += 1
        player[4] += 5
        player[3] += 15
        user.write(player)
        t = f"–°—Ç–∏x–∏—è: {player[2]}\nH–∏–∫–Ω–µ–π–º: {player[1]}\n" \
            f"–∑–¥–æ—Ä–æ–≤—å–µ: {player[3]}\n" \
            f"—É—Ä–æ–Ω: {player[4]}\n" \
            f"—É—Ä–æ–≤–µ–Ω—å: {player[5]}\no–ø—ã—Ç: {player[6]}"
        bot.send_message(m.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º —É—Ä–æ–≤–Ω—è!!! –í–æ—Ç —Ç–≤–æ–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n' + t)
        time.sleep(2)
        return
    return


def new_player(msg: Message):
    result = user.read_all()
    for b in result:
        if b[0] == msg.chat.id:
            return False
    return True


@bot.message_handler(['start'])
def start(msg: Message):
    if new_player(msg):
        temp[msg.chat.id] = {}
        reg_1(msg)
    else:
        menu(msg)


def reg_1(msg: Message):  # —Ç—É—Ç –º—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –∏–≥—Ä–æ–∫–∞ –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è
    text = ("–ü—Ä–∏–≤–µ—Ç, %s. –í —ç—Ç–æ–π –∏–≥—Ä–µ —Ç—ã –æ—Ç—Ä–∏–Ω–µ—à—å —Å–≤–æ—é —Å—É—â–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞–Ω–µ—à—å –Ω–∞—Å—Ç–æ—è—â–∏–º –º–∞–≥–æ–º üßô‚Äç‚ôÇÔ∏è. –ú–∏—Ä –Ω–∞ –ø–æ—Ä–æ–≥–µ "
            "—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è: –Ω–∞—Ä–æ–¥ –æ–≥–Ω—è üî• —Ä–∞–∑–≤—è–∑–∞–ª –≤–æ–π–Ω—É, –∏ –∏–º–µ–Ω–Ω–æ —Ç—ã —Å—Ç–∞–Ω–µ—à—å —Ç–µ–º, –∫—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∏–º –≤ –Ω–µ–π –∏–ª–∏ –±—É–¥–µ—Ç"
            "–ø—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è—Ç—å –∏–º‚öîÔ∏è!\n–Ø –≤–µ—Ä—é –≤ —Ç–µ–±—è!\n\n–ù–∞–∑–æ–≤–∏ —Å–≤–æ—ë –∏–º—è, –Ω–æ–≤–æ–±—Ä–∞–Ω–µ—Ü:")
    bot.send_message(msg.chat.id, text % msg.from_user.first_name)
    bot.register_next_step_handler(msg, reg_2)


def reg_2(msg: Message):  # —Å–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç–∏—Ö–∏—é
    temp[msg.chat.id]['username'] = msg.text
    kb = RKM(resize_keyboard=True, one_time_keyboard=True)
    kb.row('–û–≥–æ–Ω—å üî•', '–í–æ–¥–∞üåä')
    kb.row('–ó–µ–º–ª—è üåç', "–≤–æ–∑–¥—É—ÖüçÉ")
    bot.send_message(msg.chat.id, '–≤—ã–±–µ—Ä–∏ —Å—Ç–∏—Ö–∏—é', reply_markup=kb)
    bot.register_next_step_handler(msg, reg_3)


def reg_3(msg: Message):
    if msg.text == "–û–≥–æ–Ω—å üî•":
        bot.send_message(msg.chat.id, "–ú–∞–≥–∏—è –û–≥–Ω—è –ø–æ–¥ –∑–∞–ø—Ä–µ—Ç–æ–º –≤ –≥–æ—Ä–æ–¥–µ!")
        reg_2(msg)
        return
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏—Ö–∏—é
    temp[msg.chat.id]["power"] = msg.text
    hp, dmg = powers[msg.text]
    user.write([msg.chat.id, temp[msg.chat.id]["username"], temp[msg.chat.id]["power"], hp, dmg, 1, 0])
    # heals.write([msg.chat.id, {}])
    print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    bot.send_message(msg.chat.id, "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è")
    menu(msg)


def menu(msg: Message):
    kb = RKM(True, True)
    kb.row("–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ", "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –Ω–∞ –∞—Ä–µ–Ω—É")
    kb.row("–¢–∞–≤–µ—Ä–Ω–∞", "–î–æ–º")
    kb.row("–†–µ–∫–∞", "–õ–µ—Å")
    kb.row("–ü—Ä–æ—Ñ–∏–ª—å", "–†–µ–π—Ç–∏–Ω–≥")
    kb.row("–ü–æ–º–æ—â—å")
    bot.send_message(msg.chat.id, "–≤—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=kb)
    bot.register_next_step_handler(msg, menu_handler)


def menu_handler(msg: Message):
    if msg.text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ":
        fight(msg)
    elif msg.text == "–¢–∞–≤–µ—Ä–Ω–∞":
        tavern(msg)
    elif msg.text == "–î–æ–º":
        bot.send_message(msg.chat.id, "—Ç—ã –ø—Ä–∏—à—ë–ª –¥–æ–º–æ–π")
        time.sleep(3)
        menu(msg)
    elif msg.text == "–†–µ–∫–∞":
        bot.send_message(msg.chat.id, "—Ç—ã –ø—Ä–∏—à—ë–ª –∫ —Ä–µ–∫–µ")
        time.sleep(3)
        menu(msg)
    elif msg.text == "–õ–µ—Å":
        bot.send_message(msg.chat.id, "—Ç—ã –ø—Ä–∏—à—ë–ª –≤ –ª–µ—Å")
        time.sleep(3)
        menu(msg)
    elif msg.text == "–ü—Ä–æ—Ñ–∏–ª—å":
        profile(msg)
    elif msg.text == "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –Ω–∞ –∞—Ä–µ–Ω—É":
        bot.send_message(msg.chat.id, "–ü–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞")
        time.sleep(3)
        menu(msg)
    elif msg.text == "–†–µ–π—Ç–∏–Ω–≥":
        bot.send_message(msg.chat.id, "–†–µ–π—Ç–∏–Ω–≥ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        time.sleep(3)
        menu(msg)
    elif msg.text == "–ü–æ–º–æ—â—å":
        bot.send_message(msg.chat.id, "—Ç—ã –ø–æ–ø–∞–ª –≤ –ø–æ–º–æ—â—å")
        time.sleep(3)
        menu(msg)


def profile(msg: Message):
    player = user.read('userid', msg.chat.id)
    t = f"–°—Ç–∏x–∏—è: {player[2]}\nH–∏–∫–Ω–µ–π–º: {player[1]}\n" \
        f"–∑–¥–æ—Ä–æ–≤—å–µ: {player[3]}\n" \
        f"—É—Ä–æ–Ω: {player[4]}\n" \
        f"—É—Ä–æ–≤–µ–Ω—å: {player[5]}\no–ø—ã—Ç: {player[6]}"
    bot.send_message(msg.chat.id, t)
    time.sleep(3)
    menu(msg)


def tavern(msg: Message):
    kb = RKM(True, True)
    kb.row('–¢—Ä–∞–ø–µ–∑–Ω–∞—è', '–ú–∞–≥–∞–∑–∏–Ω')
    kb.row('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–æ—Ä–æ–¥')
    bot.send_message(msg.chat.id, '–≤—ã –≤ —Ç–∞–≤–µ—Ä–Ω–µ', reply_markup=kb)
    bot.register_next_step_handler(msg, tavern_handler)


def tavern_handler(msg: Message):
    if msg.text == '–¢—Ä–∞–ø–µ–∑–Ω–∞—è':
        food(msg)
    if msg.text == '–ú–∞–≥–∞–∑–∏–Ω':
        bot.send_message(msg.chat.id, '–ú–∞–≥–∞–∑–∏–Ω –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
        time.sleep(2)
        tavern(msg)
    if msg.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–æ—Ä–æ–¥':
        menu(msg)


def food(msg: Message):
    kb = IKM()
    kb.add(IB('–ú—è—Å–æ', callback_data='1'))
    kb.add(IB('–†—ã–±–∞', callback_data='2'))
    kb.add(IB('–•–ª–µ–±', callback_data='3'))
    kb.add(IB('–§—Ä—É–∫—Ç—ã', callback_data='4'))
    bot.send_message(msg.chat.id, '—Ç—ã –≤ —Ç—Ä–∞–ø–µ–∑–Ω–æ–π. –≤–æ—Ç —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å:', reply_markup=kb)


@bot.callback_query_handler(func=lambda call: call.data in ['1', '2', '3', '4'])
def eating(call: Cq):
    player = user.read('userid', call.message.chat.id)
    heal = 0
    food = ''
    if call.data == '1':
        heal = 30
        food = '–ú—è—Å–æ'
    elif call.data == '2':
        heal = 20
        food = '–†—ã–±–∞'
    elif call.data == '3':
        heal = 10
        food = '–•–ª–µ–±'
    elif call.data == '4':
        heal = 15
        food = '–§—Ä—É–∫—Ç—ã'
    player[3] += heal
    if player[3] > powers[player[2]][0]:
        player[3] = powers[player[2]][0]
    user.write(player)
    heals.write([call.message.chat.id, food])
    bot.send_message(call.message.chat.id, f'–≤—ã –ø–æ–µ–ª–∏: {food}. Hp: {player[3]}')
    menu(call.message)


if __name__ == '__main__':
    bot.polling()
